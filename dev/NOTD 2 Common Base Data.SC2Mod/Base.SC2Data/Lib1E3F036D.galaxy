include "TriggerLibs/NativeLib"
include "Lib09BE6BA8"

//--------------------------------------------------------------------------------------------------
// Library: Common Library
//--------------------------------------------------------------------------------------------------
// Constants
const int lib1E3F036D_gv_indexBaseValue = 1;
const int lib1E3F036D_gv_numberofPlayers = 8;
const int lib1E3F036D_gv_numberofProfiles = 5;
const int lib1E3F036D_gv_peacekeeperPlayer = 9;
const int lib1E3F036D_gv_hALPlayer = 13;
const int lib1E3F036D_gv_testSubjects = 14;
const int lib1E3F036D_gv_mechanicalPlayer = 11;
const int lib1E3F036D_gv_mercenaryPlayer = 12;
const int lib1E3F036D_gv_zombiePlayer = 10;

// Structures
struct lib1E3F036D_gs_PlayerStatusUI {
    int lv_classIcon;
    int lv_rankIcon;
    int lv_playerNumber;
    int lv_playerPortraitFrame;
    int lv_playerSidebarFrame;
    int lv_playerStatusFrame;
    int lv_playerFrame;
};

// Variables
int lib1E3F036D_gv_teamUIDialog;
int lib1E3F036D_gv_teamUIFrame;
lib1E3F036D_gs_PlayerStatusUI[lib1E3F036D_gv_numberofPlayers + 1] lib1E3F036D_gv_playerStatus;
lib1E3F036D_gs_PlayerStatusUI lib1E3F036D_gv_topPlayerStatus;

void lib1E3F036D_InitVariables () {
    int init_i;

    lib1E3F036D_gv_teamUIDialog = c_invalidDialogId;
    lib1E3F036D_gv_teamUIFrame = c_invalidDialogControlId;
    for (init_i = 0; init_i <= lib1E3F036D_gv_numberofPlayers; init_i += 1) {
        lib1E3F036D_gv_playerStatus[init_i].lv_classIcon = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_rankIcon = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_playerNumber = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_playerPortraitFrame = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_playerSidebarFrame = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_playerStatusFrame = c_invalidDialogControlId;
        lib1E3F036D_gv_playerStatus[init_i].lv_playerFrame = c_invalidDialogControlId;
    }
    lib1E3F036D_gv_topPlayerStatus.lv_classIcon = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_rankIcon = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_playerNumber = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_playerPortraitFrame = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_playerSidebarFrame = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_playerStatusFrame = c_invalidDialogControlId;
    lib1E3F036D_gv_topPlayerStatus.lv_playerFrame = c_invalidDialogControlId;
}

// Function Declarations
void lib1E3F036D_gf_CreateTeamUI ();
void lib1E3F036D_gf_CreatePlayerFrame (int lp_teamUIDialog);
void lib1E3F036D_gf_SetPlayerFrame (int lp_player, unit lp_playerMarine, string lp_playerPortrait);
void lib1E3F036D_gf_SetGameDifficultyforPlayerGroup (playergroup lp_players, int lp_difficulty);
void lib1E3F036D_gf_SetGameDifficulty (int lp_player, int lp_gameDifficulty);
int lib1E3F036D_gf_GameDifficultyInteger (int lp_recruit, int lp_normal, int lp_nightmare);
fixed lib1E3F036D_gf_GameDifficultyReal (fixed lp_recruit, fixed lp_normal, fixed lp_nightmare);
int lib1E3F036D_gf_GameType ();
string lib1E3F036D_gf_UnitTypeDifficulty (string lp_recruit, string lp_normal, string lp_nightmare);

// Trigger Declarations
trigger lib1E3F036D_gt_ConstructTeamUI;

// Functions
void lib1E3F036D_gf_CreateTeamUI () {
    // Implementation
    DialogCreate(156, 850, c_anchorTopRight, 0, 50, true);
    lib1E3F036D_gv_teamUIDialog = DialogLastCreated();
    DialogSetImageVisible(lib1E3F036D_gv_teamUIDialog, false);
    lib1E3F036D_gf_CreatePlayerFrame(lib1E3F036D_gv_teamUIDialog);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HighTemplar", 0, 1, RegionGetBoundsMin(RegionEntireMap()));
    lib1E3F036D_gf_SetPlayerFrame(1, UnitLastCreated(), null);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
}

void lib1E3F036D_gf_CreatePlayerFrame (int lp_teamUIDialog) {
    int autoC3353684_ae;
    int autoC3353684_ai;

    // Variable Declarations
    int lv_masterFrame;
    int lv_templateFrame;
    int lv_sidebarFrame;
    int lv_portraitFrame;
    int lv_unitStatus;
    int lv_loop;

    // Variable Initialization
    lv_masterFrame = c_invalidDialogControlId;
    lv_templateFrame = c_invalidDialogControlId;
    lv_sidebarFrame = c_invalidDialogControlId;
    lv_portraitFrame = c_invalidDialogControlId;
    lv_unitStatus = c_invalidDialogControlId;

    // Implementation
    DialogControlCreateFromTemplate(lp_teamUIDialog, c_triggerControlTypePanel, "TeamUI/TeamUI");
    lv_masterFrame = DialogControlLastCreated();
    DialogControlHookup(lv_masterFrame, c_triggerControlTypePanel, "TopPlayer");
    lib1E3F036D_gv_topPlayerStatus.lv_playerFrame = DialogControlLastCreated();
    DialogControlHookup(lib1E3F036D_gv_topPlayerStatus.lv_playerFrame, c_triggerControlTypePanel, "PlayerInfoSideBar");
    lib1E3F036D_gv_topPlayerStatus.lv_playerSidebarFrame = DialogControlLastCreated();
    DialogControlHookup(lib1E3F036D_gv_topPlayerStatus.lv_playerFrame, c_triggerControlTypePanel, "PlayerPortrait");
    lib1E3F036D_gv_topPlayerStatus.lv_playerPortraitFrame = DialogControlLastCreated();
    DialogControlHookup(lib1E3F036D_gv_topPlayerStatus.lv_playerFrame, c_triggerControlTypeUnitStatus, "PlayerStatus");
    lib1E3F036D_gv_topPlayerStatus.lv_playerStatusFrame = DialogControlLastCreated();
    autoC3353684_ae = lib1E3F036D_gv_numberofPlayers;
    autoC3353684_ai = 1;
    lv_loop = lib1E3F036D_gv_indexBaseValue;
    for ( ; ( (autoC3353684_ai >= 0 && lv_loop <= autoC3353684_ae) || (autoC3353684_ai <= 0 && lv_loop >= autoC3353684_ae) ) ; lv_loop += autoC3353684_ai ) {
        DialogControlHookup(lv_masterFrame, c_triggerControlTypePanel, "Player" + IntToString(lv_loop));
        lib1E3F036D_gv_playerStatus[lv_loop].lv_playerFrame = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(lv_loop), false);
        DialogControlHookup(lib1E3F036D_gv_playerStatus[lv_loop].lv_playerFrame, c_triggerControlTypePanel, "PlayerInfoSideBar");
        lib1E3F036D_gv_topPlayerStatus.lv_playerSidebarFrame = DialogControlLastCreated();
        DialogControlHookup(lib1E3F036D_gv_playerStatus[lv_loop].lv_playerFrame, c_triggerControlTypePanel, "PlayerPortrait");
        lib1E3F036D_gv_topPlayerStatus.lv_playerPortraitFrame = DialogControlLastCreated();
        DialogControlHookup(lib1E3F036D_gv_playerStatus[lv_loop].lv_playerFrame, c_triggerControlTypeUnitStatus, "PlayerStatus");
        lib1E3F036D_gv_playerStatus[lv_loop].lv_playerStatusFrame = DialogControlLastCreated();
    }
}

void lib1E3F036D_gf_SetPlayerFrame (int lp_player, unit lp_playerMarine, string lp_playerPortrait) {
    // Implementation
    libNtve_gf_SetDialogItemUnit(lib1E3F036D_gv_playerStatus[lp_player].lv_playerStatusFrame, lp_playerMarine, PlayerGroupAll());
    libNtve_gf_SetDialogItemUnit(lib1E3F036D_gv_topPlayerStatus.lv_playerStatusFrame, lp_playerMarine, PlayerGroupSingle(lp_player));
}

void lib1E3F036D_gf_SetGameDifficultyforPlayerGroup (playergroup lp_players, int lp_difficulty) {
    // Implementation
    PlayerGroupLoopBegin(lp_players);
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        lib1E3F036D_gf_SetGameDifficulty(PlayerGroupLoopCurrent(), lp_difficulty);
    }
    PlayerGroupLoopEnd();
}

void lib1E3F036D_gf_SetGameDifficulty (int lp_player, int lp_gameDifficulty) {
    int auto638297DE_val;

    // Implementation
    auto638297DE_val = lp_gameDifficulty;
    if (auto638297DE_val == 0) {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "GameDifficulty", 0);
    }
    else if (auto638297DE_val == 1) {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "GameDifficulty", 1);
    }
    else if (auto638297DE_val == 2) {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "GameDifficulty", 2);
    }
    else {
        libNtve_gf_SetUpgradeLevelForPlayer(PlayerGroupLoopCurrent(), "GameDifficulty", 0);
    }
    PlayerSetDifficulty(lp_player, lp_gameDifficulty);
}

int lib1E3F036D_gf_GameDifficultyInteger (int lp_recruit, int lp_normal, int lp_nightmare) {
    int auto3902616F_val;

    // Implementation
    auto3902616F_val = lib1E3F036D_gf_GameType();
    if (auto3902616F_val == 0) {
        return lp_recruit;
    }
    else if (auto3902616F_val == 1) {
        return lp_normal;
    }
    else if (auto3902616F_val == 2) {
        return lp_nightmare;
    }
    else {
        return lp_recruit;
    }
}

fixed lib1E3F036D_gf_GameDifficultyReal (fixed lp_recruit, fixed lp_normal, fixed lp_nightmare) {
    int auto6D1DB235_val;

    // Implementation
    auto6D1DB235_val = lib1E3F036D_gf_GameType();
    if (auto6D1DB235_val == 0) {
        return lp_recruit;
    }
    else if (auto6D1DB235_val == 1) {
        return lp_normal;
    }
    else if (auto6D1DB235_val == 2) {
        return lp_nightmare;
    }
    else {
        return lp_recruit;
    }
}

int lib1E3F036D_gf_GameType () {
    // Implementation
    if ((PlayerDifficulty(1) == 0)) {
        return 0;
    }
    else {
        if ((PlayerDifficulty(1) == 1)) {
            return 1;
        }
        else {
            return 2;
        }
    }
}

string lib1E3F036D_gf_UnitTypeDifficulty (string lp_recruit, string lp_normal, string lp_nightmare) {
    int autoFFC98359_val;

    // Implementation
    autoFFC98359_val = lib1E3F036D_gf_GameType();
    if (autoFFC98359_val == 0) {
        return lp_recruit;
    }
    else if (autoFFC98359_val == 1) {
        return lp_normal;
    }
    else if (autoFFC98359_val == 2) {
        return lp_nightmare;
    }
    else {
        return lp_recruit;
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Construct Team UI
//--------------------------------------------------------------------------------------------------
bool lib1E3F036D_gt_ConstructTeamUI_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    lib1E3F036D_gf_CreateTeamUI();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1E3F036D_gt_ConstructTeamUI_Init () {
    lib1E3F036D_gt_ConstructTeamUI = TriggerCreate("lib1E3F036D_gt_ConstructTeamUI_Func");
    TriggerAddEventChatMessage(lib1E3F036D_gt_ConstructTeamUI, c_playerAny, "UITest", true);
}

void lib1E3F036D_InitTriggers () {
    lib1E3F036D_gt_ConstructTeamUI_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib1E3F036D_InitLib_completed = false;

void lib1E3F036D_InitLib () {
    if (lib1E3F036D_InitLib_completed) {
        return;
    }

    lib1E3F036D_InitVariables();
    lib1E3F036D_InitTriggers();

    lib1E3F036D_InitLib_completed = true;
}

