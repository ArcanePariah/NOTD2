include "TriggerLibs/NativeLib"
include "Lib1E3F036D"

//--------------------------------------------------------------------------------------------------
// Library: Night of the Dead
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int lib840A968C_ge_MessageEventType_AlliedCommunication = 0;
const int lib840A968C_ge_MessageEventType_GameEvent = 1;
const int lib840A968C_ge_MessageEventType_EnemyCommunication = 2;
const int lib840A968C_ge_MessageEventType_EnemyEvent = 3;
const int lib840A968C_ge_MessageEventType_MissionFailure = 4;
const int lib840A968C_ge_MessageEventType_AllianceStateUpdate = 5;
const int lib840A968C_ge_Faction_UGC = 0;
const int lib840A968C_ge_Faction_HAL = 1;
const int lib840A968C_ge_Faction_Zombies = 2;
const int lib840A968C_ge_Faction_Mercernaries = 3;
const int lib840A968C_ge_Faction_Peacekeepers = 4;
const int lib840A968C_ge_Faction_Marines = 5;
const int lib840A968C_ge_Faction_Mechanicals = 6;
const int lib840A968C_ge_PreemptMessage_Preempt = 0;
const int lib840A968C_ge_PreemptMessage_DontPreempt = 1;
const int lib840A968C_ge_DropMethod_Locker = 0;
const int lib840A968C_ge_DropMethod_Orbital = 1;
const int lib840A968C_ge_DialogDuration_Short = 0;
const int lib840A968C_ge_DialogDuration_Long = 1;

// Constants
const string lib840A968C_gv_classCustomizationEvent = "CustomizeUnits";
const string lib840A968C_gv_intializeEvent = "Initialize";
const string lib840A968C_gv_shopIntialization = "Shop Intialize";
const string lib840A968C_gv_victory = "Victory";
const string lib840A968C_gv_defeat = "Defeat";
const int lib840A968C_gv_numberofClasses = 15;
const string lib840A968C_gv_classSelectionEvent = "Class Selection";
const string lib840A968C_gv_difficultySelectionEvent = "DifficultySelection";
const int lib840A968C_gv_mISSION_MAX_COUNT = 32;
const int lib840A968C_gv_numberofDifficulties = 3;
const int lib840A968C_gv_numberofPlayers = lib1E3F036D_gv_numberofPlayers;
const string lib840A968C_gv_eventRegistrationSignal = "Register Event";
const string lib840A968C_gv_playerDataBankName = "NightoftheDead2";
const string lib840A968C_gv_playerCustomizationDataBankName = "NOTD2Customization";
const string lib840A968C_gv_playerUnlocksBankName = "NOTD2Unlocks";
const string lib840A968C_gv_save = "Save";
const string lib840A968C_gv_load = "Load";
const fixed lib840A968C_gv_recruitRatingGainPerXP = 1.0;
const fixed lib840A968C_gv_normalRatingGainPerXP = 1.5;
const fixed lib840A968C_gv_nightmareRatingGainPerXP = 2.0;
const int lib840A968C_gv_gameEvents = 1;
const int lib840A968C_gv_bossEvents = 3;
const int lib840A968C_gv_playerEvents = 2;
const int lib840A968C_gv_summary = 4;
const int lib840A968C_gv_asserts = 5;
const int lib840A968C_gv_banks = 6;
const string lib840A968C_gv_gameEventLogFile = "Game Event Log";
const string lib840A968C_gv_bossEventLogFile = "Boss Log";
const string lib840A968C_gv_playerEventsLogFile = "Player Log";
const string lib840A968C_gv_summaryLogFile = "Summary Log";
const string lib840A968C_gv_assertsLogFile = "Unit Tests";
const string lib840A968C_gv_bankLogFile = "Bank Statistics";

// Structures
struct lib840A968C_gs_DifficultSelectionItems {
    playergroup lv_votes;
    int lv_optionButton;
    int lv_optionLabel;
};

struct lib840A968C_gs_Mission {
    string lv_missionData;
    int lv_missionObjective;
    trigger lv_missionProgression;
    string lv_nextMissionSignal;
};

struct lib840A968C_gs_ClassCustomizationData {
    string lv_serviceBranch;
    string[4] lv_characterModifications;
    string lv_sidearm;
    string lv_pet;
};

struct lib840A968C_gs_Stats {
    int lv_strength;
    int lv_intelligance;
    int lv_agility;
    int lv_perception;
    int lv_endurance;
    int lv_total;
    int lv_available;
};

struct lib840A968C_gs_GameplayStats {
    int lv_hits;
    int lv_damageTaken;
    fixed lv_ratingLossFromHits;
};

struct lib840A968C_gs_PlayerData {
    int lv_totalExperience;
    int lv_availableExperience;
    int lv_credits;
    fixed lv_rating;
    int lv_gamesPlayed;
    string lv_currentRank;
    int lv_currentRankIndex;
    lib840A968C_gs_Stats lv_stats;
    lib840A968C_gs_GameplayStats lv_currentGameStats;
    lib840A968C_gs_ClassCustomizationData lv_classCustomization;
};

struct lib840A968C_gs_PlayerBanks {
    bank lv_playerData;
    bank lv_currentProfile;
    bank lv_customizationUnlocks;
};

// Variable Declarations
int lib840A968C_gv_numberofArmorSets;
int lib840A968C_gv_testVaraible;
bool lib840A968C_gv_riotMode;
bool lib840A968C_gv_hordeLock;
bool lib840A968C_gv_messageControl;
string lib840A968C_gv_currentChapterData;
int lib840A968C_gv_currentChapter;
bool lib840A968C_gv_gameSetupComplete;
int lib840A968C_gv_difficulty;
int[lib840A968C_gv_numberofClasses + 1] lib840A968C_gv_classSelectionItems;
timer lib840A968C_gv_classSelectionTimer;
int lib840A968C_gv_classSelectionDialog;
int lib840A968C_gv_classSelectionPanel;
int lib840A968C_gv_classLoreFrame;
int lib840A968C_gv_classModelFrame;
int lib840A968C_gv_difficultySelectionDialog;
lib840A968C_gs_DifficultSelectionItems[4] lib840A968C_gv_difficultySelectionOptions;
lib840A968C_gs_Mission[lib840A968C_gv_mISSION_MAX_COUNT + 1] lib840A968C_gv_missionData;
int lib840A968C_gv_missionIndex;
string lib840A968C_gv_missionStep;
int lib840A968C_gv_squadRating;
int lib840A968C_gv_currentTransmission;
bool lib840A968C_gv_nightmareModeSet;
bool lib840A968C_gv_recruitMode;
int lib840A968C_gv_scalingFactor;
int lib840A968C_gv_sideMissionCount;
int lib840A968C_gv_nightVisionButton;
int lib840A968C_gv_teamLocationButton;
playergroup lib840A968C_gv_marineSquad;
playergroup lib840A968C_gv_livingMarines;
playergroup lib840A968C_gv_pets;
playergroup lib840A968C_gv_deadMarines;
lib840A968C_gs_PlayerBanks[lib840A968C_gv_numberofPlayers + 1] lib840A968C_gv_playerBanks;
timer[lib840A968C_gv_numberofPlayers + 1][lib840A968C_gv_numberofPlayers + 1] lib840A968C_gv_damageNearDeathPenaltyTimer;
lib840A968C_gs_PlayerData[lib840A968C_gv_numberofPlayers + 1] lib840A968C_gv_players;
revealer[lib840A968C_gv_numberofPlayers + 1] lib840A968C_gv_mapHackRevealerDeveloper;
bool[lib840A968C_gv_numberofPlayers + 1] lib840A968C_gv_revealerActive;

// Function Declarations
bool lib840A968C_gf_ItemhasbeenPurchased (string lp_bankConditionID);
void lib840A968C_gf_CreateUnlockBankKeys (bank lp_bank);
void lib840A968C_gf_ApplyPlayerCustomization ();
void lib840A968C_gf_ApplyCustomModel (int lp_player);
void lib840A968C_gf_ApplyCustomColor (int lp_player);
void lib840A968C_gf_ApplyCustomName ();
int lib840A968C_gf_GetSlotActor (string lp_class);
string lib840A968C_gf_GetSlotModelSet (string lp_slotName);
void lib840A968C_gf_ApplyServiceBranchUpgrade (int lp_player);
void lib840A968C_gf_ApplyCustomSidearm (int lp_player);
void lib840A968C_gf_ApplyCharacterMods (int lp_player);
void lib840A968C_gf_SendTransmission (text lp_speakerName, text lp_message, int lp_overrideCurrentMessage, int lp_type, int lp_messageDisplayLocation, int lp_speakerFaction, unit lp_speakingUnit);
int lib840A968C_gf_GetMessagesfromMessageArea (int lp_messageLocation);
soundlink lib840A968C_gf_GetFactionRadioSound (int lp_senderFaction);
color lib840A968C_gf_GetMessageColor (int lp_event);
void lib840A968C_gf_ChapterStart (int lp_chapterPreset);
void lib840A968C_gf_MedicalDropPoolItemSpawn (point lp_location);
void lib840A968C_gf_FlareDropPoolItemSpawn (point lp_location);
void lib840A968C_gf_FieldLightDropPoolItemSpawn (point lp_location);
void lib840A968C_gf_AmmoModificationDropPoolItemSpawn (point lp_location);
void lib840A968C_gf_MagazineDropPoolItemSpawn (point lp_location);
void lib840A968C_gf_SpawnItem (point lp_point, string lp_item, int lp_spawnType);
void lib840A968C_gf_PlayerSetup ();
void lib840A968C_gf_DefaultAllianceStates ();
bool lib840A968C_gf_PlayerHasClassUnlocked (int lp_player, int lp_classSlot);
void lib840A968C_gf_ClassUnlocked (int lp_classSlot);
void lib840A968C_gf_SetGameDifficulty ();
void lib840A968C_gf_CreateDifficultySelection ();
bool lib840A968C_gf_GetMissionType (string lp_mission);
trigger lib840A968C_gf_GetMissionProgression (int lp_missionToken);
string lib840A968C_gf_GetMissionSignal (int lp_missionToken);
int lib840A968C_gf_MissionStart (string lp_mission, trigger lp_progressionTrigger, string lp_nextMissionSignal);
void lib840A968C_gf_MissionEnd (int lp_missionOutcome, int lp_missionToken);
void lib840A968C_gf_MissonRewards (string lp_mission);
bool lib840A968C_gf_PointNotNearUnitGroupUnits (point lp_targetPoint, unitgroup lp_unitGroup, fixed lp_distance);
playergroup lib840A968C_gf_GetMarineSquadPlayers ();
playergroup lib840A968C_gf_GetLivingMarineSquadPlayers ();
playergroup lib840A968C_gf_GetDeadMarineSquadPlayers ();
playergroup lib840A968C_gf_GetPets ();
unit lib840A968C_gf_GetMarine (int lp_player);
unitgroup lib840A968C_gf_GetMarineGroup ();
bool lib840A968C_gf_IsAMarine (unit lp_unit);
void lib840A968C_gf_RatingFromDeath (int lp_player);
void lib840A968C_gf_DeathShareVision (int lp_deadPlayer);
bool lib840A968C_gf_PlayerHasPet (int lp_player);
void lib840A968C_gf_SpawnPet (int lp_player, fixed lp_deadMarineExperience, point lp_spawnPosition);
void lib840A968C_gf_DropEquippedMagazines (point lp_dropPoint, int lp_numberofMagazines);
void lib840A968C_gf_SetRankData (int lp_player);
void lib840A968C_gf_CreateBankDefaultKeyValues (bank lp_bank);
void lib840A968C_gf_PreloadBanks ();
void lib840A968C_gf_LoadBanks ();
void lib840A968C_gf_LoadDataBankData (int lp_player, bank lp_bank);
void lib840A968C_gf_LoadCustomizationBankData (int lp_player, bank lp_bank);
void lib840A968C_gf_DataBoundsCheck (int lp_player);
void lib840A968C_gf_SaveDataBank (int lp_player, bank lp_bank);
void lib840A968C_gf_SaveCustomizationBank (int lp_player, bank lp_bank);
string lib840A968C_gf_GetSectionName (string lp_section);
string lib840A968C_gf_GetKeyName (string lp_key);
void lib840A968C_gf_CreateProfileBank (int lp_player, int lp_profile);
void lib840A968C_gf_LoadActiveProfile (int lp_player);
void lib840A968C_gf_AwardRating (int lp_experienceGained, int lp_player);
void lib840A968C_gf_RatingBonusAdjustment (int lp_player);
void lib840A968C_gf_AwardPlayerXP (int lp_player, int lp_xP);
void lib840A968C_gf_AwardTeamXP (int lp_xP);
void lib840A968C_gf_AwardUnitXP (fixed lp_xP, unit lp_unit);
void lib840A968C_gf_AwardTeamMarineXP (fixed lp_xP);
void lib840A968C_gf_AwardCredits (int lp_player, int lp_credits);
void lib840A968C_gf_AwardTeamCredits (int lp_credits);
void lib840A968C_gf_RankUp (int lp_player);
bool lib840A968C_gf_RankUpCheck (int lp_player);
fixed lib840A968C_gf_RatingLoss (int lp_player);
text lib840A968C_gf_GetPlayerNamewithrank (int lp_player);
void lib840A968C_gf_BackgroundDialog (unit lp_unit, text lp_speaker, text lp_speechText, int lp_speechType, fixed lp_dialogDuration);
void lib840A968C_gf_Assert (string lp_test, string lp_expectedValue, string lp_testMessage);
void lib840A968C_gf_AssertBankLoad ();
void lib840A968C_gf_AssertBankCreation ();
void lib840A968C_gf_AssertBankSave ();
void lib840A968C_gf_AssertXPAward ();
void lib840A968C_gf_AssertMarineExperienceAward ();
void lib840A968C_gf_AssertClassCreation ();
bool lib840A968C_gf_IsaDeveloper (string lp_handle);

// Trigger Declarations
trigger lib840A968C_gt_ShopIntialize;
trigger lib840A968C_gt_BankLoad;
trigger lib840A968C_gt_ApplyServiceBranches;
trigger lib840A968C_gt_ApplySidearms;
trigger lib840A968C_gt_ApplyCharacterModifications;
trigger lib840A968C_gt_ParasiteAttacks;
trigger lib840A968C_gt_AmbientAttacksOnPlayers;
trigger lib840A968C_gt_RiotModeCheck;
trigger lib840A968C_gt_ActivateHorde;
trigger lib840A968C_gt_Intialization;
trigger lib840A968C_gt_PlayerOptionsOverride;
trigger lib840A968C_gt_AIIntialize;
trigger lib840A968C_gt_SetLogging;
trigger lib840A968C_gt_GameStart;
trigger lib840A968C_gt_PlayerLeavestheGame;
trigger lib840A968C_gt_Victory;
trigger lib840A968C_gt_Defeat;
trigger lib840A968C_gt_DisplayClassSelection;
trigger lib840A968C_gt_ClassSelection;
trigger lib840A968C_gt_EndClassSelection;
trigger lib840A968C_gt_DifficultySelection;
trigger lib840A968C_gt_DifficultyVote;
trigger lib840A968C_gt_EventRegistrationForMarineUnits;
trigger lib840A968C_gt_NightVisionModuleLightingChange;
trigger lib840A968C_gt_NightVisionUIHookup;
trigger lib840A968C_gt_NightVisionToggle;
trigger lib840A968C_gt_TeamLocation;
trigger lib840A968C_gt_HookupTeamLocationButton;
trigger lib840A968C_gt_PlayerMarineDies;
trigger lib840A968C_gt_BankSave;
trigger lib840A968C_gt_RatingLossfromLives;
trigger lib840A968C_gt_RatingLossfromFriendlyFire;
trigger lib840A968C_gt_HitsUpdate;
trigger lib840A968C_gt_CamoSwitch;
trigger lib840A968C_gt_ModelLightMarine;
trigger lib840A968C_gt_ModelHeavyMarine;
trigger lib840A968C_gt_ColorSwitching;
trigger lib840A968C_gt_RunUnitTests;
trigger lib840A968C_gt_ForceHordeMode;
trigger lib840A968C_gt_SetChapter;
trigger lib840A968C_gt_DeveloperGodMode;
trigger lib840A968C_gt_MissionRewards;
trigger lib840A968C_gt_DisplayPlayerStats;
trigger lib840A968C_gt_SkipClassSelection;
trigger lib840A968C_gt_Weapons;
trigger lib840A968C_gt_RandomArmor;
trigger lib840A968C_gt_AllianceStates;
trigger lib840A968C_gt_SpawnItem;
trigger lib840A968C_gt_MapReveal;
trigger lib840A968C_gt_MaxLevelHero;
trigger lib840A968C_gt_HPScaling;

// Library Initialization
void lib840A968C_InitVariables ();

