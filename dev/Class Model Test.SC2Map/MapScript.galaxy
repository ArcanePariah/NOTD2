//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Just Another StarCraft II Map
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "Lib09BE6BA8"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    lib09BE6BA8_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
unit[16] gv_classUnits;

void InitGlobals () {
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_CreateClass (string lp_classToCreate, point lp_location);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_TestInitialize;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_CreateClass (string lp_classToCreate, point lp_location) {
    // Implementation
    libNtve_gf_CreateUnitsWithDefaultFacing(1, UserDataGetUnit("Classes", lp_classToCreate, "Class Unit", 1), 0, 1, lp_location);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Test Initialize
//--------------------------------------------------------------------------------------------------
bool gt_TestInitialize_Func (bool testConds, bool runActions) {
    int auto52F21C9F_u;
    int auto88BACFEE_ae;
    int auto88BACFEE_ai;

    // Variable Declarations
    point lv_startPoint;
    string lv_currentClass;
    int lv_currentCamo;
    int lv_currentArmor;
    int lv_currentRow;

    // Variable Initialization
    lv_startPoint = Point(15.0, 15.0);

    // Actions
    if (!runActions) {
        return true;
    }

    auto52F21C9F_u = 1;
    for ( ; auto52F21C9F_u <= UserDataInstanceCount("Classes"); auto52F21C9F_u += 1)
    {
        lv_currentClass = UserDataInstance("Classes", auto52F21C9F_u);
        auto88BACFEE_ae = UserDataInstanceCount("ArmorSets");
        auto88BACFEE_ai = 1;
        lv_currentArmor = 1;
        for ( ; ( (auto88BACFEE_ai >= 0 && lv_currentArmor <= auto88BACFEE_ae) || (auto88BACFEE_ai <= 0 && lv_currentArmor >= auto88BACFEE_ae) ) ; lv_currentArmor += auto88BACFEE_ai ) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, UserDataGetUnit("Classes", lv_currentClass, "Class Unit", 1), 0, 1, lv_startPoint);
            ActorScopeSend(ActorScopeFromUnit(UnitLastCreated()), libNtve_gf_Signal(UserDataGetString("ArmorSets", UserDataInstance("ArmorSets", lv_currentArmor), "Armor Set Name", 1)));
            lv_startPoint = PointWithOffset(lv_startPoint, 5.0, 0.0);
        }
        lv_currentRow += 1;
        lv_startPoint = Point(15.0, (15 + (5 * lv_currentRow)));
        ;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TestInitialize_Init () {
    gt_TestInitialize = TriggerCreate("gt_TestInitialize_Func");
    TriggerAddEventMapInit(gt_TestInitialize);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_TestInitialize_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
